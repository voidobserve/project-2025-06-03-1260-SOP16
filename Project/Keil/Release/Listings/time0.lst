C51 COMPILER V9.60.7.0   TIME0                                                             06/07/2025 16:56:13 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIME0
OBJECT MODULE PLACED IN .\Release\Objects\time0.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\time0.c LARGE OPTIMIZE(9,SIZE) BROWSE INTVECTOR(0X000C) INCDI
                    -R(..\..\Libraries\Include;..\..\User) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\time0.lst) OBJECT(.\Releas
                    -e\Objects\time0.obj)

line level    source

   1          #include "time0.h"
   2          
   3          // u8 ms_cnt = 0;
   4          // volatile bit tmr0_flag = 0;
   5          
   6          static volatile u8 cnt_during_power_on = 0;       // ¿ª»ú»ºÆô¶¯£¬µ÷½ÚpwmÕ¼¿Õ±ÈÊ±£¬Ê¹ÓÃµ½µÄ¼ÆÊýÖµ
   7          volatile bit flag_time_comes_during_power_on = 0; // ±êÖ¾Î»£¬¿ª»ú»ºÆô¶¯ÆÚ¼ä£¬µ÷½ÚÊ±¼äµ½À´
   8          
   9          /**
  10           * @brief ÅäÖÃ¶¨Ê±Æ÷TMR0£¬¶¨Ê±Æ÷Ä¬ÈÏ¹Ø±Õ
  11           */
  12          void tmr0_config(void)
  13          {
  14   1          __EnableIRQ(TMR0_IRQn); // Ê¹ÄÜtimer0ÖÐ¶Ï
  15   1          IE_EA = 1;              // Ê¹ÄÜ×ÜÖÐ¶Ï
  16   1      
  17   1      #define PEROID_VAL (SYSCLK / 128 / 1000 - 1) // ÖÜÆÚÖµ=ÏµÍ³Ê±ÖÓ/·ÖÆµ/ÆµÂÊ - 1
  18   1          // ÉèÖÃtimer0µÄ¼ÆÊý¹¦ÄÜ£¬ÅäÖÃÒ»¸öÆµÂÊÎª1kHzµÄÖÐ¶Ï
  19   1          TMR_ALLCON = TMR0_CNT_CLR(0x1);                        // Çå³ý¼ÆÊýÖµ
  20   1          TMR0_PRH = TMR_PERIOD_VAL_H((PEROID_VAL >> 8) & 0xFF); // ÖÜÆÚÖµ
  21   1          TMR0_PRL = TMR_PERIOD_VAL_L((PEROID_VAL >> 0) & 0xFF);
  22   1          TMR0_CONH = TMR_PRD_PND(0x1) | TMR_PRD_IRQ_EN(0x1);                          // ¼ÆÊýµÈÓÚÖÜÆÚÊ±ÔÊÐí·¢Éú
             -ÖÐ¶Ï
  23   1          TMR0_CONL = TMR_SOURCE_SEL(0x7) | TMR_PRESCALE_SEL(0x7) | TMR_MODE_SEL(0x1); // Ñ¡ÔñÏµÍ³Ê±ÖÓ£¬128·ÖÆµ£
             -¬¼ÆÊýÄ£Ê½
  24   1      }
  25          
  26          /**
  27           * @brief ¿ªÆô¶¨Ê±Æ÷TMR0£¬¿ªÊ¼¼ÆÊ±
  28           */
  29          void tmr0_enable(void)
  30          {
  31   1          // ÖØÐÂ¸øTMR0ÅäÖÃÊ±ÖÓ
  32   1          TMR0_CONL &= ~(TMR_SOURCE_SEL(0x07)); // Çå³ý¶¨Ê±Æ÷µÄÊ±ÖÓÔ´ÅäÖÃ¼Ä´æÆ÷
  33   1          TMR0_CONL |= TMR_SOURCE_SEL(0x06);    // ÅäÖÃ¶¨Ê±Æ÷µÄÊ±ÖÓÔ´£¬Ê¹ÓÃÏµÍ³Ê±ÖÓ£¨Ô¼21MHz£©
  34   1      
  35   1          __EnableIRQ(TMR0_IRQn); // Ê¹ÄÜÖÐ¶Ï
  36   1          IE_EA = 1;              // ´ò¿ª×ÜÖÐ¶Ï
  37   1      }
  38          
  39          /**
  40           * @brief ¹Ø±Õ¶¨Ê±Æ÷0£¬Çå¿Õ¼ÆÊýÖµ
  41           */
  42          void tmr0_disable(void)
  43          {
  44   1          // ²»¸ø¶¨Ê±Æ÷Ìá¹©Ê±ÖÓ£¬ÈÃËüÍ£Ö¹¼ÆÊý
  45   1          TMR0_CONL &= ~(TMR_SOURCE_SEL(0x07)); // Çå³ý¶¨Ê±Æ÷µÄÊ±ÖÓÔ´ÅäÖÃ¼Ä´æÆ÷
  46   1          TMR0_CONL |= TMR_SOURCE_SEL(0x05);    // ÅäÖÃ¶¨Ê±Æ÷µÄÊ±ÖÓÔ´£¬²»ÓÃÈÎºÎÊ±ÖÓ
  47   1      
  48   1          // Çå³ý¶¨Ê±Æ÷µÄ¼ÆÊýÖµ
  49   1          TMR0_CNTL = 0;
  50   1          TMR0_CNTH = 0;
  51   1      
C51 COMPILER V9.60.7.0   TIME0                                                             06/07/2025 16:56:13 PAGE 2   

  52   1          __DisableIRQ(TMR0_IRQn); // ¹Ø±ÕÖÐ¶Ï£¨²»Ê¹ÄÜÖÐ¶Ï£©
  53   1      }
  54          
  55          // extern void fun(void);
  56          // ¶¨Ê±Æ÷TMR0ÖÐ¶Ï·þÎñº¯Êý
  57          void TIMR0_IRQHandler(void) interrupt TMR0_IRQn
  58          {
  59   1          // ½øÈëÖÐ¶ÏÉèÖÃIP£¬²»¿ÉÉ¾³ý
  60   1          __IRQnIPnPush(TMR0_IRQn);
  61   1      
  62   1          // ---------------- ÓÃ»§º¯Êý´¦Àí -------------------
  63   1      
  64   1          // ÖÜÆÚÖÐ¶Ï
  65   1          if (TMR0_CONH & TMR_PRD_PND(0x1))
  66   1          {
  67   2              TMR0_CONH |= TMR_PRD_PND(0x1); // Çå³ýpending
  68   2      
  69   2              // ms_cnt++;
  70   2              cnt_during_power_on++;
  71   2      
  72   2              // if (ms_cnt >= 25)
  73   2              // {
  74   2              //     ms_cnt = 0;
  75   2              //     // tmr0_flag = 1;
  76   2              // }
  77   2      
  78   2              if (cnt_during_power_on >= 13) // 13ms
  79   2              {
  80   3                  cnt_during_power_on = 0;
  81   3                  flag_time_comes_during_power_on = 1; // ¿ª»ú»ºÆô¶¯ÆÚ¼ä£¬¿ØÖÆÃ¿´Îµ÷½ÚPWMÕ¼¿Õ±ÈµÄÊ±¼ä
  82   3              }
  83   2      
  84   2              if (rf_key_para.cur_scan_times < 255)
  85   2              {
  86   3                  rf_key_para.cur_scan_times++; // ÓÃÓÚ433Ò£¿ØÆ÷°´¼üÉ¨Ãè
  87   3              }
  88   2      
  89   2              { // ·çÉÈ×´Ì¬¼ì²â£¬ÀÛ¼ÆÒ»¶ÎÊ±¼äºó¸üÐÂ×´Ì¬
  90   3                  static u16 fan_normal_cnt = 0;
  91   3                  static u16 fan_err_cnt = 0;
  92   3      
  93   3                  if (flag_tim_scan_fan_is_err) // Èç¹û¼ì²âµ½ÁË·çÉÈÒì³£
  94   3                  {
  95   4                      fan_err_cnt++;
  96   4                      fan_normal_cnt = 0;
  97   4      
  98   4                      if (fan_err_cnt > FAN_SCAN_TIMES)
  99   4                      {
 100   5                          fan_err_cnt = 0;
 101   5                          cur_fan_status = FAN_STATUS_ERROR;
 102   5                      }
 103   4                  }
 104   3                  else
 105   3                  {
 106   4                      fan_normal_cnt++;
 107   4                      fan_err_cnt = 0;
 108   4      
 109   4                      if (fan_normal_cnt > FAN_SCAN_TIMES)
 110   4                      {
 111   5                          fan_normal_cnt = 0;
 112   5                          cur_fan_status = FAN_STATUS_NORMAL;
 113   5                      }
C51 COMPILER V9.60.7.0   TIME0                                                             06/07/2025 16:56:13 PAGE 3   

 114   4                  }
 115   3              } // ·çÉÈ×´Ì¬¼ì²â£¬ÀÛ¼ÆÒ»¶ÎÊ±¼äºó¸üÐÂ×´Ì¬
 116   2          }
 117   1      
 118   1          // ÍË³öÖÐ¶ÏÉèÖÃIP£¬²»¿ÉÉ¾³ý
 119   1          __IRQnIPnPop(TMR0_IRQn);
 120   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    215    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
